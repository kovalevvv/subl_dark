{
  "name": "Dark+ (default dark)",
  "author": "",
  "globals": {
    "background": "",
    "foreground": "",
    "caret": "",
    "block_caret": "",
    "line_highlight": "",
    "misspelling": "",
    "fold_marker": "",
    "accent": "",
    "gutter": "",
    "gutter_foreground": "",
    "line_diff_added": "",
    "line_diff_modified": "",
    "line_diff_deleted": "",
    "selection": "",
    "inactive_selection": "",
    "inactive_selection_foreground": "",
    "highlight": "",
    "find_highlight": "",
    "find_highlight_foreground": "",
    "guide": "",
    "active_guide": "",
    "stack_guide": "",
    "brackets_foreground": "",
    "tags_foreground": "",
    "shadow": ""
  },
  "variables": {
    "black": "",
    "white": "",
    "red": "",
    "green": "",
    "yellow": "",
    "orange": "",
    "blue": "",
    "magenta": "",
    "cyan": ""
  },
  "rules": [
    {
      "name": "Function declarations",
      "foreground": "#DCDCAA",
      "font_style": 0,
      "scope": "entity.name.function, support.function, support.constant.handlebars, source.powershell variable.other.member, entity.name.operator.custom-literal"
    },
    {
      "name": "Types declaration and references",
      "foreground": "#4EC9B0",
      "font_style": 0,
      "scope": "meta.return-type, support.class, support.type, entity.name.type, entity.name.namespace, entity.other.attribute, entity.name.scope-resolution, entity.name.class, storage.type.numeric.go, storage.type.byte.go, storage.type.boolean.go, storage.type.string.go, storage.type.uintptr.go, storage.type.error.go, storage.type.rune.go, storage.type.cs, storage.type.generic.cs, storage.type.modifier.cs, storage.type.variable.cs, storage.type.annotation.java, storage.type.generic.java, storage.type.java, storage.type.object.array.java, storage.type.primitive.array.java, storage.type.primitive.java, storage.type.token.java, storage.type.groovy, storage.type.annotation.groovy, storage.type.parameters.groovy, storage.type.generic.groovy, storage.type.object.array.groovy, storage.type.primitive.array.groovy, storage.type.primitive.groovy"
    },
    {
      "name": "Types declaration and references, TS grammar specific",
      "foreground": "#4EC9B0",
      "font_style": 0,
      "scope": "meta.type.cast.expr, meta.type.new.expr, support.constant.math, support.constant.dom, support.constant.json, entity.other.inherited-class"
    },
    {
      "name": "Control flow / Special keywords",
      "foreground": "#C586C0",
      "font_style": 0,
      "scope": "keyword.control, source.cpp keyword.operator.new, keyword.operator.delete, keyword.other.using, keyword.other.operator, entity.name.operator"
    },
    {
      "name": "Variable and parameter name",
      "foreground": "#9CDCFE",
      "font_style": 0,
      "scope": "variable, meta.definition.variable.name, support.variable, entity.name.variable"
    },
    {
      "name": "Constants and enums",
      "foreground": "#4FC1FF",
      "font_style": 0,
      "scope": "variable.other.constant, variable.other.enummember"
    },
    {
      "name": "Object keys, TS grammar specific",
      "foreground": "#9CDCFE",
      "font_style": 0,
      "scope": "meta.object-literal.key"
    },
    {
      "name": "CSS property value",
      "foreground": "#CE9178",
      "font_style": 0,
      "scope": "support.constant.property-value, support.constant.font-name, support.constant.media-type, support.constant.media, constant.other.color.rgb-value, constant.other.rgb-value, support.constant.color"
    },
    {
      "name": "Regular expression groups",
      "foreground": "#CE9178",
      "font_style": 0,
      "scope": "punctuation.definition.group.regexp, punctuation.definition.group.assertion.regexp, punctuation.definition.character-class.regexp, punctuation.character.set.begin.regexp, punctuation.character.set.end.regexp, keyword.operator.negation.regexp, support.other.parenthesis.regexp"
    },
    {
      "foreground": "#d16969",
      "font_style": 0,
      "scope": "constant.character.character-class.regexp, constant.other.character-class.set.regexp, constant.other.character-class.regexp, constant.character.set.regexp"
    },
    {
      "foreground": "#DCDCAA",
      "font_style": 0,
      "scope": "keyword.operator.or.regexp, keyword.control.anchor.regexp"
    },
    {
      "foreground": "#d7ba7d",
      "font_style": 0,
      "scope": "keyword.operator.quantifier.regexp"
    },
    {
      "foreground": "#569cd6",
      "font_style": 0,
      "scope": "constant.character"
    },
    {
      "foreground": "#d7ba7d",
      "font_style": 0,
      "scope": "constant.character.escape"
    },
    {
      "foreground": "#C8C8C8",
      "font_style": 0,
      "scope": "entity.name.label"
    }
  ]
}